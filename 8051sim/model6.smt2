; benchmark generated from python API
(set-option :produce-unsat-cores true)
(set-info :status unknown)
(declare-fun PC () (_ BitVec 16))
(declare-fun opcode () (_ BitVec 24))
(declare-fun B () (_ BitVec 8))
(declare-fun ACC () (_ BitVec 8))
(declare-fun PSW () (_ BitVec 8))
(declare-fun IP () (_ BitVec 8))
(declare-fun P3 () (_ BitVec 8))
(declare-fun IE () (_ BitVec 8))
(declare-fun P2 () (_ BitVec 8))
(declare-fun SBUF () (_ BitVec 8))
(declare-fun SCON () (_ BitVec 8))
(declare-fun P1 () (_ BitVec 8))
(declare-fun TH1 () (_ BitVec 8))
(declare-fun TL1 () (_ BitVec 8))
(declare-fun TH0 () (_ BitVec 8))
(declare-fun TL0 () (_ BitVec 8))
(declare-fun TMOD () (_ BitVec 8))
(declare-fun TCON () (_ BitVec 8))
(declare-fun PCON () (_ BitVec 8))
(declare-fun DPH () (_ BitVec 8))
(declare-fun DPL () (_ BitVec 8))
(declare-fun SP () (_ BitVec 8))
(declare-fun P0 () (_ BitVec 8))
(declare-fun IRAM () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun _choice_s2_PC_rel2_base_2_ () Bool)
(declare-fun _choice_s2_PC_rel2_base_1_ () Bool)
(declare-fun _choice_s2_PC_rel2_base_0_ () Bool)
(declare-fun _choice_s2_PC_rel1_base_2_ () Bool)
(declare-fun _choice_s2_PC_rel1_base_1_ () Bool)
(declare-fun _choice_s2_PC_rel1_base_0_ () Bool)
(declare-fun _choice_s2_PC_jb_rel_0_ () Bool)
(declare-fun _choice_s2_jb_polarity_0_ () Bool)
(declare-fun _choice_s2_bit_addr_choice_0_ () Bool)
(declare-fun _choice_s2_SP_pc_2_ () Bool)
(declare-fun _choice_s2_SP_pc_1_ () Bool)
(declare-fun _choice_s2_SP_pc_0_ () Bool)
(declare-fun _choice_s2_nPC_3_ () Bool)
(declare-fun _choice_s2_nPC_2_ () Bool)
(declare-fun _choice_s2_nPC_1_ () Bool)
(declare-fun _choice_s2_nPC_0_ () Bool)
(declare-fun _choice_s1_PC_rel2_base_2_ () Bool)
(declare-fun _choice_s1_PC_rel2_base_1_ () Bool)
(declare-fun _choice_s1_PC_rel2_base_0_ () Bool)
(declare-fun _choice_s1_PC_rel1_base_2_ () Bool)
(declare-fun _choice_s1_PC_rel1_base_1_ () Bool)
(declare-fun _choice_s1_PC_rel1_base_0_ () Bool)
(declare-fun _choice_s1_PC_jb_rel_0_ () Bool)
(declare-fun _choice_s1_jb_polarity_0_ () Bool)
(declare-fun _choice_s1_bit_addr_choice_0_ () Bool)
(declare-fun _choice_s1_SP_pc_2_ () Bool)
(declare-fun _choice_s1_SP_pc_1_ () Bool)
(declare-fun _choice_s1_SP_pc_0_ () Bool)
(declare-fun _choice_s1_nPC_3_ () Bool)
(declare-fun _choice_s1_nPC_2_ () Bool)
(declare-fun _choice_s1_nPC_1_ () Bool)
(declare-fun _choice_s1_nPC_0_ () Bool)
(declare-fun y () Bool)
(assert (!
(let ((?x17 (bvadd PC (_ bv3 16))))
(let ((?x39 ((_ extract 23 16) opcode)))
(let ((?x187 ((_ sign_extend 8) ?x39)))
(let ((?x13 (bvadd PC (_ bv1 16))))
(let ((?x298 (ite _choice_s2_PC_rel2_base_1_ ?x13 (ite _choice_s2_PC_rel2_base_2_ (bvadd PC (_ bv2 16)) ?x17))))
(let ((?x38 ((_ extract 15 8) opcode)))
(let ((?x179 ((_ sign_extend 8) ?x38)))
(let ((?x291 (ite _choice_s2_PC_rel1_base_1_ ?x13 (ite _choice_s2_PC_rel1_base_2_ (bvadd PC (_ bv2 16)) ?x17))))
(let ((?x301 (ite _choice_s2_PC_jb_rel_0_ (bvadd (ite _choice_s2_PC_rel1_base_0_ PC ?x291) ?x179) (bvadd (ite _choice_s2_PC_rel2_base_0_ PC ?x298) ?x187))))
(let ((?x284 (ite _choice_s2_jb_polarity_0_ (_ bv1 1) (_ bv0 1))))
(let ((?x212 (bvadd ((_ zero_extend 3) ((_ extract 7 3) (ite _choice_s2_bit_addr_choice_0_ ?x38 ?x39))) (_ bv32 8))))
(let ((?x213 (ite (= ((_ extract 7 7) (ite _choice_s2_bit_addr_choice_0_ ?x38 ?x39)) (_ bv1 1)) (concat ((_ extract 7 3) (ite _choice_s2_bit_addr_choice_0_ ?x38 ?x39)) (_ bv0 3)) ?x212)))
(let ((?x240 (ite (= ?x213 (_ bv208 8)) PSW (ite (= ?x213 (_ bv224 8)) ACC (ite (= ?x213 (_ bv240 8)) B (_ bv0 8))))))
(let ((?x243 (ite (= ?x213 (_ bv168 8)) IE (ite (= ?x213 (_ bv176 8)) P3 (ite (= ?x213 (_ bv184 8)) IP ?x240)))))
(let ((?x246 (ite (= ?x213 (_ bv152 8)) SCON (ite (= ?x213 (_ bv153 8)) SBUF (ite (= ?x213 (_ bv160 8)) P2 ?x243)))))
(let ((?x249 (ite (= ?x213 (_ bv139 8)) TL1 (ite (= ?x213 (_ bv141 8)) TH1 (ite (= ?x213 (_ bv144 8)) P1 ?x246)))))
(let ((?x252 (ite (= ?x213 (_ bv137 8)) TMOD (ite (= ?x213 (_ bv138 8)) TL0 (ite (= ?x213 (_ bv140 8)) TH0 ?x249)))))
(let ((?x255 (ite (= ?x213 (_ bv131 8)) DPH (ite (= ?x213 (_ bv135 8)) PCON (ite (= ?x213 (_ bv136 8)) TCON ?x252)))))
(let ((?x258 (ite (= ?x213 (_ bv128 8)) P0 (ite (= ?x213 (_ bv129 8)) SP (ite (= ?x213 (_ bv130 8)) DPL ?x255)))))
(let ((?x259 (ite (= ((_ extract 7 7) ?x213) (_ bv0 1)) (select IRAM ?x213) ?x258)))
(let ((?x276 (ite (= ((_ extract 2 0) (ite _choice_s2_bit_addr_choice_0_ ?x38 ?x39)) (_ bv6 3)) ((_ extract 6 6) ?x259) ((_ extract 7 7) ?x259))))
(let ((?x277 (ite (= ((_ extract 2 0) (ite _choice_s2_bit_addr_choice_0_ ?x38 ?x39)) (_ bv5 3)) ((_ extract 5 5) ?x259) ?x276)))
(let ((?x278 (ite (= ((_ extract 2 0) (ite _choice_s2_bit_addr_choice_0_ ?x38 ?x39)) (_ bv4 3)) ((_ extract 4 4) ?x259) ?x277)))
(let ((?x279 (ite (= ((_ extract 2 0) (ite _choice_s2_bit_addr_choice_0_ ?x38 ?x39)) (_ bv3 3)) ((_ extract 3 3) ?x259) ?x278)))
(let ((?x280 (ite (= ((_ extract 2 0) (ite _choice_s2_bit_addr_choice_0_ ?x38 ?x39)) (_ bv2 3)) ((_ extract 2 2) ?x259) ?x279)))
(let ((?x281 (ite (= ((_ extract 2 0) (ite _choice_s2_bit_addr_choice_0_ ?x38 ?x39)) (_ bv1 3)) ((_ extract 1 1) ?x259) ?x280)))
(let ((?x282 (ite (= ((_ extract 2 0) (ite _choice_s2_bit_addr_choice_0_ ?x38 ?x39)) (_ bv0 3)) ((_ extract 0 0) ?x259) ?x281)))
(let ((?x202 (ite _choice_s2_SP_pc_2_ (concat (select IRAM SP) (select IRAM (bvsub SP (_ bv1 8)))) (concat (select IRAM (bvadd SP (_ bv1 8))) (select IRAM SP)))))
(let ((?x203 (ite _choice_s2_SP_pc_1_ (concat (select IRAM SP) (select IRAM (bvadd SP (_ bv1 8)))) ?x202)))
(let ((?x204 (ite _choice_s2_SP_pc_0_ (concat (select IRAM (bvsub SP (_ bv1 8))) (select IRAM SP)) ?x203)))
(let ((?x304 (ite _choice_s2_nPC_2_ ?x17 (ite _choice_s2_nPC_3_ ?x204 (ite (= ?x282 ?x284) ?x301 ?x17)))))
(let ((?x15 (bvadd PC (_ bv2 16))))
(let ((?x185 (ite _choice_s1_PC_rel2_base_1_ ?x13 (ite _choice_s1_PC_rel2_base_2_ ?x15 ?x17))))
(let ((?x177 (ite _choice_s1_PC_rel1_base_1_ ?x13 (ite _choice_s1_PC_rel1_base_2_ ?x15 ?x17))))
(let ((?x189 (ite _choice_s1_PC_jb_rel_0_ (bvadd (ite _choice_s1_PC_rel1_base_0_ PC ?x177) ?x179) (bvadd (ite _choice_s1_PC_rel2_base_0_ PC ?x185) ?x187))))
(let ((?x170 (ite _choice_s1_jb_polarity_0_ (_ bv1 1) (_ bv0 1))))
(let ((?x49 (bvadd ((_ zero_extend 3) ((_ extract 7 3) (ite _choice_s1_bit_addr_choice_0_ ?x38 ?x39))) (_ bv32 8))))
(let ((?x50 (ite (= ((_ extract 7 7) (ite _choice_s1_bit_addr_choice_0_ ?x38 ?x39)) (_ bv1 1)) (concat ((_ extract 7 3) (ite _choice_s1_bit_addr_choice_0_ ?x38 ?x39)) (_ bv0 3)) ?x49)))
(let ((?x120 (ite (= ?x50 (_ bv208 8)) PSW (ite (= ?x50 (_ bv224 8)) ACC (ite (= ?x50 (_ bv240 8)) B (_ bv0 8))))))
(let ((?x123 (ite (= ?x50 (_ bv168 8)) IE (ite (= ?x50 (_ bv176 8)) P3 (ite (= ?x50 (_ bv184 8)) IP ?x120)))))
(let ((?x126 (ite (= ?x50 (_ bv152 8)) SCON (ite (= ?x50 (_ bv153 8)) SBUF (ite (= ?x50 (_ bv160 8)) P2 ?x123)))))
(let ((?x129 (ite (= ?x50 (_ bv139 8)) TL1 (ite (= ?x50 (_ bv141 8)) TH1 (ite (= ?x50 (_ bv144 8)) P1 ?x126)))))
(let ((?x132 (ite (= ?x50 (_ bv137 8)) TMOD (ite (= ?x50 (_ bv138 8)) TL0 (ite (= ?x50 (_ bv140 8)) TH0 ?x129)))))
(let ((?x135 (ite (= ?x50 (_ bv131 8)) DPH (ite (= ?x50 (_ bv135 8)) PCON (ite (= ?x50 (_ bv136 8)) TCON ?x132)))))
(let ((?x138 (ite (= ?x50 (_ bv128 8)) P0 (ite (= ?x50 (_ bv129 8)) SP (ite (= ?x50 (_ bv130 8)) DPL ?x135)))))
(let ((?x139 (ite (= ((_ extract 7 7) ?x50) (_ bv0 1)) (select IRAM ?x50) ?x138)))
(let ((?x162 (ite (= ((_ extract 2 0) (ite _choice_s1_bit_addr_choice_0_ ?x38 ?x39)) (_ bv6 3)) ((_ extract 6 6) ?x139) ((_ extract 7 7) ?x139))))
(let ((?x163 (ite (= ((_ extract 2 0) (ite _choice_s1_bit_addr_choice_0_ ?x38 ?x39)) (_ bv5 3)) ((_ extract 5 5) ?x139) ?x162)))
(let ((?x164 (ite (= ((_ extract 2 0) (ite _choice_s1_bit_addr_choice_0_ ?x38 ?x39)) (_ bv4 3)) ((_ extract 4 4) ?x139) ?x163)))
(let ((?x165 (ite (= ((_ extract 2 0) (ite _choice_s1_bit_addr_choice_0_ ?x38 ?x39)) (_ bv3 3)) ((_ extract 3 3) ?x139) ?x164)))
(let ((?x166 (ite (= ((_ extract 2 0) (ite _choice_s1_bit_addr_choice_0_ ?x38 ?x39)) (_ bv2 3)) ((_ extract 2 2) ?x139) ?x165)))
(let ((?x167 (ite (= ((_ extract 2 0) (ite _choice_s1_bit_addr_choice_0_ ?x38 ?x39)) (_ bv1 3)) ((_ extract 1 1) ?x139) ?x166)))
(let ((?x168 (ite (= ((_ extract 2 0) (ite _choice_s1_bit_addr_choice_0_ ?x38 ?x39)) (_ bv0 3)) ((_ extract 0 0) ?x139) ?x167)))
(let ((?x33 (ite _choice_s1_SP_pc_2_ (concat (select IRAM SP) (select IRAM (bvsub SP (_ bv1 8)))) (concat (select IRAM (bvadd SP (_ bv1 8))) (select IRAM SP)))))
(let ((?x34 (ite _choice_s1_SP_pc_1_ (concat (select IRAM SP) (select IRAM (bvadd SP (_ bv1 8)))) ?x33)))
(let ((?x35 (ite _choice_s1_SP_pc_0_ (concat (select IRAM (bvsub SP (_ bv1 8))) (select IRAM SP)) ?x34)))
(let ((?x192 (ite _choice_s1_nPC_2_ ?x17 (ite _choice_s1_nPC_3_ ?x35 (ite (= ?x168 ?x170) ?x189 ?x17)))))
(let (($x308 (and (distinct (ite _choice_s1_nPC_0_ ?x13 (ite _choice_s1_nPC_1_ ?x15 ?x192)) (ite _choice_s2_nPC_0_ ?x13 (ite _choice_s2_nPC_1_ ?x15 ?x304))) true)))
(= y $x308))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :named p2))
(assert (!
(let ((?x331 ((_ extract 7 0) opcode)))
(= ?x331 (_ bv16 8))) :named p3))
(assert (!
(let ((?x3212 (ite _choice_s1_PC_rel2_base_2_ (_ bv2 16) (_ bv3 16))))
(let ((?x3210 (ite _choice_s1_PC_rel2_base_1_ (_ bv1 16) ?x3212)))
(let ((?x3209 (ite _choice_s1_PC_rel2_base_0_ (_ bv0 16) ?x3210)))
(let ((?x2959 (ite _choice_s1_PC_rel1_base_2_ (_ bv2 16) (_ bv3 16))))
(let ((?x2824 (ite _choice_s1_PC_rel1_base_1_ (_ bv1 16) ?x2959)))
(let ((?x2683 (ite _choice_s1_PC_rel1_base_0_ (_ bv0 16) ?x2824)))
(let ((?x3211 (ite _choice_s1_PC_jb_rel_0_ ?x2683 ?x3209)))
(let ((?x3213 (ite _choice_s1_jb_polarity_0_ (_ bv3 16) ?x3211)))
(let ((?x3214 (ite _choice_s1_nPC_3_ (_ bv0 16) ?x3213)))
(let ((?x3172 (ite _choice_s1_nPC_2_ (_ bv3 16) ?x3214)))
(let ((?x3215 (ite _choice_s1_nPC_1_ (_ bv2 16) ?x3172)))
(let ((?x2723 (ite _choice_s1_nPC_0_ (_ bv1 16) ?x3215)))
(= (_ bv3 16) ?x2723))))))))))))) :named p4))
(assert (!
(let ((?x2661 (ite _choice_s2_PC_rel2_base_2_ (_ bv2 16) (_ bv3 16))))
(let ((?x3192 (ite _choice_s2_PC_rel2_base_1_ (_ bv1 16) ?x2661)))
(let ((?x3193 (ite _choice_s2_PC_rel2_base_0_ (_ bv0 16) ?x3192)))
(let ((?x2674 (ite _choice_s2_PC_rel1_base_2_ (_ bv2 16) (_ bv3 16))))
(let ((?x2662 (ite _choice_s2_PC_rel1_base_1_ (_ bv1 16) ?x2674)))
(let ((?x2675 (ite _choice_s2_PC_rel1_base_0_ (_ bv0 16) ?x2662)))
(let ((?x2910 (ite _choice_s2_PC_jb_rel_0_ ?x2675 ?x3193)))
(let ((?x2911 (ite _choice_s2_jb_polarity_0_ (_ bv3 16) ?x2910)))
(let ((?x3088 (ite _choice_s2_nPC_3_ (_ bv0 16) ?x2911)))
(let ((?x3089 (ite _choice_s2_nPC_2_ (_ bv3 16) ?x3088)))
(let ((?x3189 (ite _choice_s2_nPC_1_ (_ bv2 16) ?x3089)))
(let ((?x2983 (ite _choice_s2_nPC_0_ (_ bv1 16) ?x3189)))
(= (_ bv3 16) ?x2983))))))))))))) :named p5))
(assert (!
(let ((?x3212 (ite _choice_s1_PC_rel2_base_2_ (_ bv2 16) (_ bv3 16))))
(let ((?x3210 (ite _choice_s1_PC_rel2_base_1_ (_ bv1 16) ?x3212)))
(let ((?x3209 (ite _choice_s1_PC_rel2_base_0_ (_ bv0 16) ?x3210)))
(let ((?x2959 (ite _choice_s1_PC_rel1_base_2_ (_ bv2 16) (_ bv3 16))))
(let ((?x2824 (ite _choice_s1_PC_rel1_base_1_ (_ bv1 16) ?x2959)))
(let ((?x2683 (ite _choice_s1_PC_rel1_base_0_ (_ bv0 16) ?x2824)))
(let ((?x3211 (ite _choice_s1_PC_jb_rel_0_ ?x2683 ?x3209)))
(let ((?x3069 (ite _choice_s1_jb_polarity_0_ ?x3211 (_ bv3 16))))
(let ((?x3070 (ite _choice_s1_nPC_3_ (_ bv257 16) ?x3069)))
(let ((?x3071 (ite _choice_s1_nPC_2_ (_ bv3 16) ?x3070)))
(let ((?x3072 (ite _choice_s1_nPC_1_ (_ bv2 16) ?x3071)))
(let ((?x3073 (ite _choice_s1_nPC_0_ (_ bv1 16) ?x3072)))
(= (_ bv3 16) ?x3073))))))))))))) :named p6))
(assert (!
(let ((?x2661 (ite _choice_s2_PC_rel2_base_2_ (_ bv2 16) (_ bv3 16))))
(let ((?x3192 (ite _choice_s2_PC_rel2_base_1_ (_ bv1 16) ?x2661)))
(let ((?x3193 (ite _choice_s2_PC_rel2_base_0_ (_ bv0 16) ?x3192)))
(let ((?x2674 (ite _choice_s2_PC_rel1_base_2_ (_ bv2 16) (_ bv3 16))))
(let ((?x2662 (ite _choice_s2_PC_rel1_base_1_ (_ bv1 16) ?x2674)))
(let ((?x2675 (ite _choice_s2_PC_rel1_base_0_ (_ bv0 16) ?x2662)))
(let ((?x2910 (ite _choice_s2_PC_jb_rel_0_ ?x2675 ?x3193)))
(let ((?x2885 (ite _choice_s2_jb_polarity_0_ ?x2910 (_ bv3 16))))
(let ((?x2995 (ite _choice_s2_nPC_3_ (_ bv257 16) ?x2885)))
(let ((?x2695 (ite _choice_s2_nPC_2_ (_ bv3 16) ?x2995)))
(let ((?x2998 (ite _choice_s2_nPC_1_ (_ bv2 16) ?x2695)))
(let ((?x3879 (ite _choice_s2_nPC_0_ (_ bv1 16) ?x2998)))
(= (_ bv3 16) ?x3879))))))))))))) :named p7))
(assert (!
(let ((?x2990 (ite _choice_s1_PC_rel2_base_2_ (_ bv3 16) (_ bv4 16))))
(let ((?x3184 (ite _choice_s1_PC_rel2_base_1_ (_ bv2 16) ?x2990)))
(let ((?x3185 (ite _choice_s1_PC_rel2_base_0_ (_ bv1 16) ?x3184)))
(let ((?x3156 (ite _choice_s1_PC_rel1_base_2_ (_ bv3 16) (_ bv4 16))))
(let ((?x3157 (ite _choice_s1_PC_rel1_base_1_ (_ bv2 16) ?x3156)))
(let ((?x3253 (ite _choice_s1_PC_rel1_base_0_ (_ bv1 16) ?x3157)))
(let ((?x3254 (bvadd (_ bv1 16) ?x3253)))
(let ((?x3136 (ite _choice_s1_PC_jb_rel_0_ ?x3254 ?x3185)))
(let ((?x170 (ite _choice_s1_jb_polarity_0_ (_ bv1 1) (_ bv0 1))))
(let ((?x2763 (ite _choice_s1_bit_addr_choice_0_ (_ bv0 1) (_ bv1 1))))
(let (($x2839 (= ?x2763 ?x170)))
(let ((?x3137 (ite $x2839 ?x3136 (_ bv4 16))))
(let ((?x3138 (ite _choice_s1_nPC_3_ (_ bv257 16) ?x3137)))
(let ((?x3139 (ite _choice_s1_nPC_2_ (_ bv4 16) ?x3138)))
(let ((?x3140 (ite _choice_s1_nPC_1_ (_ bv3 16) ?x3139)))
(let ((?x3141 (ite _choice_s1_nPC_0_ (_ bv2 16) ?x3140)))
(= (_ bv4 16) ?x3141))))))))))))))))) :named p8))
(assert (!
(let ((?x3839 (ite _choice_s2_PC_rel2_base_2_ (_ bv3 16) (_ bv4 16))))
(let ((?x3842 (ite _choice_s2_PC_rel2_base_1_ (_ bv2 16) ?x3839)))
(let ((?x3845 (ite _choice_s2_PC_rel2_base_0_ (_ bv1 16) ?x3842)))
(let ((?x3827 (ite _choice_s2_PC_rel1_base_2_ (_ bv3 16) (_ bv4 16))))
(let ((?x3830 (ite _choice_s2_PC_rel1_base_1_ (_ bv2 16) ?x3827)))
(let ((?x3833 (ite _choice_s2_PC_rel1_base_0_ (_ bv1 16) ?x3830)))
(let ((?x3836 (bvadd (_ bv1 16) ?x3833)))
(let ((?x3848 (ite _choice_s2_PC_jb_rel_0_ ?x3836 ?x3845)))
(let ((?x284 (ite _choice_s2_jb_polarity_0_ (_ bv1 1) (_ bv0 1))))
(let ((?x3824 (ite _choice_s2_bit_addr_choice_0_ (_ bv0 1) (_ bv1 1))))
(let (($x3881 (= ?x3824 ?x284)))
(let ((?x3851 (ite $x3881 ?x3848 (_ bv4 16))))
(let ((?x3854 (ite _choice_s2_nPC_3_ (_ bv257 16) ?x3851)))
(let ((?x3857 (ite _choice_s2_nPC_2_ (_ bv4 16) ?x3854)))
(let ((?x3627 (ite _choice_s2_nPC_1_ (_ bv3 16) ?x3857)))
(let ((?x3628 (ite _choice_s2_nPC_0_ (_ bv2 16) ?x3627)))
(= (_ bv4 16) ?x3628))))))))))))))))) :named p9))
(assert (!
(let ((?x3106 (ite _choice_s1_PC_rel2_base_2_ (_ bv2053 16) (_ bv2054 16))))
(let ((?x3107 (ite _choice_s1_PC_rel2_base_1_ (_ bv2052 16) ?x3106)))
(let ((?x2811 (ite _choice_s1_PC_rel2_base_0_ (_ bv2051 16) ?x3107)))
(let ((?x2836 (bvadd (_ bv1 16) ?x2811)))
(let ((?x2747 (ite _choice_s1_PC_rel1_base_2_ (_ bv2053 16) (_ bv2054 16))))
(let ((?x2770 (ite _choice_s1_PC_rel1_base_1_ (_ bv2052 16) ?x2747)))
(let ((?x2893 (ite _choice_s1_PC_rel1_base_0_ (_ bv2051 16) ?x2770)))
(let ((?x2687 (bvadd (_ bv1 16) ?x2893)))
(let ((?x3013 (ite _choice_s1_PC_jb_rel_0_ ?x2687 ?x2836)))
(let ((?x2881 (ite _choice_s1_jb_polarity_0_ (_ bv2054 16) ?x3013)))
(let ((?x3031 (ite _choice_s1_nPC_3_ (_ bv257 16) ?x2881)))
(let ((?x3085 (ite _choice_s1_nPC_2_ (_ bv2054 16) ?x3031)))
(let ((?x2731 (ite _choice_s1_nPC_1_ (_ bv2053 16) ?x3085)))
(let ((?x2732 (ite _choice_s1_nPC_0_ (_ bv2052 16) ?x2731)))
(= (_ bv2054 16) ?x2732))))))))))))))) :named p10))
(assert (!
(let ((?x4722 (ite _choice_s2_PC_rel2_base_2_ (_ bv2053 16) (_ bv2054 16))))
(let ((?x4441 (ite _choice_s2_PC_rel2_base_1_ (_ bv2052 16) ?x4722)))
(let ((?x4443 (ite _choice_s2_PC_rel2_base_0_ (_ bv2051 16) ?x4441)))
(let ((?x4436 (bvadd (_ bv1 16) ?x4443)))
(let ((?x3701 (ite _choice_s2_PC_rel1_base_2_ (_ bv2053 16) (_ bv2054 16))))
(let ((?x4118 (ite _choice_s2_PC_rel1_base_1_ (_ bv2052 16) ?x3701)))
(let ((?x4115 (ite _choice_s2_PC_rel1_base_0_ (_ bv2051 16) ?x4118)))
(let ((?x4720 (bvadd (_ bv1 16) ?x4115)))
(let ((?x4438 (ite _choice_s2_PC_jb_rel_0_ ?x4720 ?x4436)))
(let ((?x4440 (ite _choice_s2_jb_polarity_0_ (_ bv2054 16) ?x4438)))
(let ((?x4354 (ite _choice_s2_nPC_3_ (_ bv257 16) ?x4440)))
(let ((?x3389 (ite _choice_s2_nPC_2_ (_ bv2054 16) ?x4354)))
(let ((?x3305 (ite _choice_s2_nPC_1_ (_ bv2053 16) ?x3389)))
(let ((?x4442 (ite _choice_s2_nPC_0_ (_ bv2052 16) ?x3305)))
(= (_ bv2054 16) ?x4442))))))))))))))) :named p11))
(assert (!
(let ((?x3231 (ite _choice_s1_PC_rel2_base_2_ (_ bv2065 16) (_ bv2066 16))))
(let ((?x3390 (ite _choice_s1_PC_rel2_base_1_ (_ bv2064 16) ?x3231)))
(let ((?x2982 (ite _choice_s1_PC_rel2_base_0_ (_ bv2063 16) ?x3390)))
(let ((?x3863 (bvadd (_ bv1 16) ?x2982)))
(let ((?x3018 (ite _choice_s1_PC_rel1_base_2_ (_ bv2065 16) (_ bv2066 16))))
(let ((?x3234 (ite _choice_s1_PC_rel1_base_1_ (_ bv2064 16) ?x3018)))
(let ((?x3287 (ite _choice_s1_PC_rel1_base_0_ (_ bv2063 16) ?x3234)))
(let ((?x2798 (bvadd (_ bv1 16) ?x3287)))
(let ((?x2697 (ite _choice_s1_PC_jb_rel_0_ ?x2798 ?x3863)))
(let ((?x3005 (ite _choice_s1_jb_polarity_0_ ?x2697 (_ bv2066 16))))
(let ((?x3080 (ite _choice_s1_nPC_3_ (_ bv771 16) ?x3005)))
(let ((?x2802 (ite _choice_s1_nPC_2_ (_ bv2066 16) ?x3080)))
(let ((?x3131 (ite _choice_s1_nPC_1_ (_ bv2065 16) ?x2802)))
(let ((?x3132 (ite _choice_s1_nPC_0_ (_ bv2064 16) ?x3131)))
(= (_ bv2067 16) ?x3132))))))))))))))) :named p12))
(assert (!
(let ((?x4239 (ite _choice_s2_PC_rel2_base_2_ (_ bv2065 16) (_ bv2066 16))))
(let ((?x3050 (ite _choice_s2_PC_rel2_base_1_ (_ bv2064 16) ?x4239)))
(let ((?x2833 (ite _choice_s2_PC_rel2_base_0_ (_ bv2063 16) ?x3050)))
(let ((?x3414 (bvadd (_ bv1 16) ?x2833)))
(let ((?x3329 (ite _choice_s2_PC_rel1_base_2_ (_ bv2065 16) (_ bv2066 16))))
(let ((?x3330 (ite _choice_s2_PC_rel1_base_1_ (_ bv2064 16) ?x3329)))
(let ((?x3394 (ite _choice_s2_PC_rel1_base_0_ (_ bv2063 16) ?x3330)))
(let ((?x3372 (bvadd (_ bv1 16) ?x3394)))
(let ((?x2857 (ite _choice_s2_PC_jb_rel_0_ ?x3372 ?x3414)))
(let ((?x4384 (ite _choice_s2_jb_polarity_0_ ?x2857 (_ bv2066 16))))
(let ((?x3259 (ite _choice_s2_nPC_3_ (_ bv771 16) ?x4384)))
(let ((?x3665 (ite _choice_s2_nPC_2_ (_ bv2066 16) ?x3259)))
(let ((?x3009 (ite _choice_s2_nPC_1_ (_ bv2065 16) ?x3665)))
(let ((?x3488 (ite _choice_s2_nPC_0_ (_ bv2064 16) ?x3009)))
(= (_ bv2067 16) ?x3488))))))))))))))) :named p13))
(assert (!
(let ((?x4536 (ite _choice_s1_PC_rel2_base_2_ (_ bv32967 16) (_ bv32968 16))))
(let ((?x4194 (ite _choice_s1_PC_rel2_base_1_ (_ bv32966 16) ?x4536)))
(let ((?x4955 (ite _choice_s1_PC_rel2_base_0_ (_ bv32965 16) ?x4194)))
(let ((?x4974 (bvadd (_ bv8 16) ?x4955)))
(let ((?x4207 (ite _choice_s1_PC_rel1_base_2_ (_ bv32967 16) (_ bv32968 16))))
(let ((?x3722 (ite _choice_s1_PC_rel1_base_1_ (_ bv32966 16) ?x4207)))
(let ((?x3121 (ite _choice_s1_PC_rel1_base_0_ (_ bv32965 16) ?x3722)))
(let ((?x3819 (bvadd (_ bv5 16) ?x3121)))
(let ((?x4973 (ite _choice_s1_PC_jb_rel_0_ ?x3819 ?x4974)))
(let ((?x4971 (ite _choice_s1_jb_polarity_0_ (_ bv32968 16) ?x4973)))
(let ((?x4970 (ite _choice_s1_nPC_3_ (_ bv5654 16) ?x4971)))
(let ((?x4968 (ite _choice_s1_nPC_2_ (_ bv32968 16) ?x4970)))
(let ((?x4967 (ite _choice_s1_nPC_1_ (_ bv32967 16) ?x4968)))
(let ((?x4965 (ite _choice_s1_nPC_0_ (_ bv32966 16) ?x4967)))
(= (_ bv32976 16) ?x4965))))))))))))))) :named p14))
(assert (!
(let ((?x5355 (ite _choice_s2_PC_rel2_base_2_ (_ bv32967 16) (_ bv32968 16))))
(let ((?x4671 (ite _choice_s2_PC_rel2_base_1_ (_ bv32966 16) ?x5355)))
(let ((?x5130 (ite _choice_s2_PC_rel2_base_0_ (_ bv32965 16) ?x4671)))
(let ((?x4700 (bvadd (_ bv8 16) ?x5130)))
(let ((?x5061 (ite _choice_s2_PC_rel1_base_2_ (_ bv32967 16) (_ bv32968 16))))
(let ((?x5060 (ite _choice_s2_PC_rel1_base_1_ (_ bv32966 16) ?x5061)))
(let ((?x5595 (ite _choice_s2_PC_rel1_base_0_ (_ bv32965 16) ?x5060)))
(let ((?x5596 (bvadd (_ bv5 16) ?x5595)))
(let ((?x4693 (ite _choice_s2_PC_jb_rel_0_ ?x5596 ?x4700)))
(let ((?x4694 (ite _choice_s2_jb_polarity_0_ (_ bv32968 16) ?x4693)))
(let ((?x3404 (ite _choice_s2_nPC_3_ (_ bv5654 16) ?x4694)))
(let ((?x3912 (ite _choice_s2_nPC_2_ (_ bv32968 16) ?x3404)))
(let ((?x5704 (ite _choice_s2_nPC_1_ (_ bv32967 16) ?x3912)))
(let ((?x5705 (ite _choice_s2_nPC_0_ (_ bv32966 16) ?x5704)))
(= (_ bv32976 16) ?x5705))))))))))))))) :named p15))
(check-sat)
(get-unsat-core)
